"""empty message

Revision ID: 8d43be314057
Revises: 262869a2f7d9
Create Date: 2025-08-25 12:25:41.055630

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8d43be314057'
down_revision: Union[str, None] = '262869a2f7d9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('individual',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('cpf', sa.String(length=11), nullable=False),
    sa.Column('rg', sa.String(length=20), nullable=True),
    sa.Column('nome', sa.String(length=255), nullable=False),
    sa.Column('nome_mae', sa.String(length=255), nullable=True),
    sa.Column('nome_pai', sa.String(length=255), nullable=True),
    sa.Column('orgao_emissor', sa.String(length=3), nullable=True),
    sa.Column('escolaridade', sa.String(length=100), nullable=True),
    sa.Column('data_nascimento', sa.DateTime(), nullable=True),
    sa.Column('idade', sa.Integer(), nullable=True),
    sa.Column('sexo', sa.Enum('MASCULINO', 'FEMININO', name='sexotype'), nullable=True),
    sa.Column('estado_civil', sa.Enum('CASADO', 'SOLTEIRO', 'VIUVO', 'DIVOCIADO', 'SEPARADO', 'UNIAO', name='estadociviltype'), nullable=True),
    sa.Column('situacao_cadastral', sa.Enum('REGULAR', 'PENDENTE', 'SUSPENSA', 'CANCELADA', 'FALECIDO', 'NULA', name='situacaocadastraltype'), nullable=True),
    sa.Column('data_situacao_cadastral', sa.DateTime(), nullable=True),
    sa.Column('socio_empresa', sa.Boolean(), nullable=True),
    sa.Column('qtd_empresas_que_e_socio', sa.Integer(), nullable=True),
    sa.Column('representante_legal', sa.Boolean(), nullable=True),
    sa.Column('tem_siape', sa.Boolean(), nullable=True),
    sa.Column('veiculo_associado', sa.Boolean(), nullable=True),
    sa.Column('veiculo_qtd', sa.Integer(), nullable=True),
    sa.Column('pep', sa.Boolean(), nullable=True),
    sa.Column('clt_renda', sa.Boolean(), nullable=True),
    sa.Column('auxilio_bolsa_familia', sa.Boolean(), nullable=True),
    sa.Column('auxilio_emergencial', sa.Boolean(), nullable=True),
    sa.Column('bcp', sa.Boolean(), nullable=True),
    sa.Column('obito', sa.Boolean(), nullable=True),
    sa.Column('data_obito', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('cpf'),
    sa.UniqueConstraint('rg')
    )
    op.create_table('individual_beneficio',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('individual_id', sa.Integer(), nullable=False),
    sa.Column('beneficio_renda', sa.Boolean(), nullable=True),
    sa.Column('beneficio_qtd', sa.Integer(), nullable=True),
    sa.Column('beneficio_renda_total', sa.Float(), nullable=True),
    sa.Column('beneficio_renda_total_valor', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('beneficio_emprestimo', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['individual_id'], ['individual.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('individual_id')
    )
    op.create_table('individual_clt',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('individual_id', sa.Integer(), nullable=False),
    sa.Column('clt_cbo', sa.String(length=100), nullable=True),
    sa.Column('clt_qtd_pessoas', sa.Integer(), nullable=True),
    sa.Column('clt_renda_presumida', sa.String(length=100), nullable=True),
    sa.Column('clt_renda_presumida_valor', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.ForeignKeyConstraint(['individual_id'], ['individual.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('individual_id')
    )
    op.create_table('individual_siape',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('individual_id', sa.Integer(), nullable=False),
    sa.Column('siape_tipo', sa.String(length=100), nullable=True),
    sa.Column('siape_matricula', sa.String(length=100), nullable=True),
    sa.Column('siape_contrato', sa.String(length=100), nullable=True),
    sa.Column('siape_valor_total_contrato', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('siape_valor_total_parcela', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('siape_faixa_renda', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('siape_faixa_renda_valor', sa.Numeric(precision=12, scale=2), nullable=True),
    sa.Column('siape_margem', sa.String(length=100), nullable=True),
    sa.ForeignKeyConstraint(['individual_id'], ['individual.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('individual_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('individual_siape')
    op.drop_table('individual_clt')
    op.drop_table('individual_beneficio')
    op.drop_table('individual')
    # ### end Alembic commands ###
